

CREATE COMPUTE MODULE msgflow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.Properties.MessageFormat ='Text1';
		SET OutputRoot.Properties.MessageType ='{}:EMPLOYEES';
		SET OutputRoot.Properties.MessageSet ='msgset';
		SET OutputRoot.MRM.ID = InputRoot.XMLNSC.EMPLOYEES.EMPLOYEE.ID;
		SET OutputRoot.MRM.NAME = InputRoot.XMLNSC.EMPLOYEES.EMPLOYEE.NAME.FNAME || InputRoot.XMLNSC.EMPLOYEES.EMPLOYEE.NAME.LNAME ;
		SET OutputRoot.MRM.LOCATION = InputRoot.XMLNSC.EMPLOYEES.EMPLOYEE.LOCATION;
		
		DECLARE A INT CARDINALITY(InputRoot.XMLNSC.EMPLOYEES.EMPLOYEE.[]);
		DECLARE B INT;
		SET B=1;
		WHILE(B<=A)DO
		SET OutputRoot.MRM.EMPLOYEE.ID=InputRoot.XMLNSC.EMPLOYEES.EMPLOYEE.[B].ID;
		SET OutputRoot.MRM.EMPLOYEE.NAME.FNAME=InputRoot.XMLNSC.EMPLOYEES.EMPLOYEE.[B].NAME.LNAME;
		SET OutputRoot.MRM.EMPLOYEE.LOCATION=InputRoot.XMLNSC.EMPLOYEES.EMPLOYEE.[B].LOCATION;
		SET B=B+1;
	END WHILE;
	
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
